body{
    font-family:'Lato',sans-serif;
    padding:0;
    margin: 0;
}

nav{
    background-color: black;
    color: white;
    padding:20px 50px;
    width:100%;
    
    
}
.navTop .limitedOffer{
    border-bottom:2px solid green ;
    font-size: 30px;
    margin-left:20px;
}
.navTop{
    display:flex;
    justify-content:space-between;
    align-items:center;
    margin-right: 150px;
}
.navTop .fa-magnifying-glass{
    font-size:40px;
}
.navTop img{
    width: 150px;
    height: auto;
}

.search{
    display:flex;
    align-items:center;
    justify-content:space-between;
    padding:5px;
    border-radius:5px;
    background-color:lightpink;


 }
 .search input{
    background-color:transparent;
    border:none;
    font-size: 30px;
 }
.search input::placeholder{
    color:white;
}
.navBottom{
    display:flex;
    justify-content:center;
    align-items:center;
    background:black;
    
}

.menuItem{
    margin-right: 50px;
    font-size: 30px;
}
.slider{
    background: url("images/wavy background.jpg");
    background-repeat: no-repeat;
    background-size:cover;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 81%); 
    overflow:hidden;
    /*
     - clip path has width:100vw by default so its children inside it will not go
     beyond the screen size.
     - if there was no clip path then each sneaker would have taken
     100% width of the screen and the consecutive sneakers would have extended beyond the screen
     i.e we will have to scroll left to see the next sneaker.
    
    */
}

.sliderWrapper{
    display:flex;
    align-items: center;
    justify-content: center;
    width:500vw;
    transition: all 1s ease-in-out;
    /*
    - the width in terms of view port is important otherwise all the items 
    will come together
    idk why it works
    basically the width we give here is the total width of all the slider items

    Why 500vw?:

If there are 5 .sliderItem elements, 
each with a width of 100vw, the total width of the 
.sliderWrapper needs to be 
5 * 100vw = 500vw to accommodate all the items.
    */
    
}
.sliderImage{
    position:absolute;
    bottom:1px;
    width:1500px;
    height:auto;
    z-index:1;
    
}

.sliderItem{
    
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100vw;          
    height:100vh;
    position:relative;
    

}

/*

- the width and height expressed in terms of view port is important
 otherwise they will get squashed 
 - slider item is given the width of 100vw and height of 100vh and not the image
 prolly to include the text and other elements in the slider item.

*/

.sliderTitle{
    color:white;
    position:absolute;
    right:5%;
    top:10%;
    font-size: 100px;
    font-weight: 1000;
    color: white;
    z-index:1;

}

/* stacking order is determined by

    - dom
    - z-indexing*/
.subtitle{
    color:white;
    position:absolute;
    right:5%;
    top:20%;
    font-size: 70px;
    color: white;
    /* text-align:center;
    is not provided here to align air force and light pink 
    because they are not in the same textbox because they are 
    not the same text type
    - so we make up for it by controlling the coordinate positioning */
}
.sliderPrice{
    color:White;
    position:absolute;
    top:30%;
    left:15%;
    color: lightpink;
    font-size: 80px;
    z-index:1;
}
.buyButton{
    position: absolute;
    top:45%;
    left:15%;
    font-size: 60px;
    border:none;
    border-radius: 10px;
    cursor: pointer;
    z-index:1;
}



.slideBg{
    position:absolute;
    width: 1000px;
    height: 1000px;
    border-radius: 50%;
    z-index:0;
}

/* we are defining nth child again and again for different properties
because we are not changing inherent styles(color, backgroung-color) but inherent styles of 
sub classes */

.sliderItem:nth-child(1) .slideBg{
    background-color: lightpink;
}
.sliderItem:nth-child(2) .slideBg{
    background-color:#c1b3a9; ;
}
.sliderItem:nth-child(3) .slideBg{
    background-color:#b3969b;
}
.sliderItem:nth-child(4) .slideBg{
    background-color:#da97b1;
}
.sliderItem:nth-child(5) .slideBg{
    background-color:#eed8e1;
}
/* set the price */
.sliderItem:nth-child(1) .sliderPrice {
    color: lightpink;
}

.sliderItem:nth-child(2) .sliderPrice {
    color: #c1b3a9;
    
}

.sliderItem:nth-child(3) .sliderPrice {
    color: #b3969b;
}

.sliderItem:nth-child(4) .sliderPrice {
    color: #da97b1;
}

.sliderItem:nth-child(5) .sliderPrice {
    color: #eed8e1;
}
/* set color for each of the button */
.sliderItem:nth-child(1) .buyButton {
    background-color: lightpink;
}

.sliderItem:nth-child(2) .buyButton {
    background-color: #c1b3a9;
}

.sliderItem:nth-child(3) .buyButton {
    background-color: #b3969b;
}

.sliderItem:nth-child(4) .buyButton {
    background-color: #da97b1;
}

.sliderItem:nth-child(5) .buyButton {
    background-color: #eed8e1;
}
/* hovering property for each button */
/* 6th june: why not just put it in sliderItem .buybutton:hover{....} i.e not using the 
nth-child */
.sliderItem:nth-child(1) .buyButton:hover,
.sliderItem:nth-child(2) .buyButton:hover,
.sliderItem:nth-child(3) .buyButton:hover,
.sliderItem:nth-child(4) .buyButton:hover,
.sliderItem:nth-child(5) .buyButton:hover {
    background: white;
    color: black;
    transition: 0.5s;
}
/* --------------------------------------------------------features ----------------------------------------------------------------------*/
.features{
    position: relative;
    width: 100%; /* Changed from 100vw or 100vh to 100% */
    display:flex;
    justify-content:space-between;
    align-items:center;
    /* padding: 50px 100px; */
    overflow: hidden;
    height: 70vh; /* Changed from 100vh to auto */
    /* box-sizing: border-box; */
}
.features .feature{
    display:flex;
    flex-direction:column;
    align-items:center;
    justify-content:center;
    /* width: 30%;
    height: 400px; 
    
    giving this dimension makes the icons misalign 
    if they are all not the same size*/
}
.feature i{
    font-size: 80px;
    color:lightpink
}
.feature .featureTitle{
    /* height:30px;
    width: 200px; 
    
    this will make the title and description
    overlap*/
    font-size: 40px;
    margin: 80px 80px 20px;
    font-weight: 600;

}

.feature .featureDesc{
    font-size: 30px;
    height:30px;
    width: 200px;
    text-align:center;
    color:rgb(62, 56, 56);
}
/* ---------------------------------------------------product------------------------------------------------------------ */
.product{
    clip-path: polygon(0 15%, 100% 0, 100% 100%, 0% 100%);
    position: relative; 
    background-color: whitesmoke;
    z-index: 0;
    margin: 0 auto; 
    height: 100vh; 
    padding: 40px 20px; 
   /* box-sizing: border-box;*/ /*means any width or height is applied to 
    a box containing the content+padding and not just content. It avoids the extra sizing tht usually comes when we
    specify padding*/
}   

.product .productImg{
    position: absolute;
    width: 50%;

}

.productDetails{
    position: absolute;
    top: 20%;
    left: 50%;;
    width: 40%;
    z-index: 1;
    font-size:25px;
}

.productTitle{
    font-size: 100px;
    font-weight: 800px;
}
.productDesc{
    font-size: 30px;
    margin: 20px;
    color: rgb(82, 76, 76);
    margin-bottom: 50px;
}

.colors , .sizes{
    display: flex;
    margin: 20px; /*this is margin for colorssss not color*/
}

.color{
    height: 90px;
    width: 90px;
    background-color: black;
    margin: 20px 20px 20px 0px; /*margin for color not colors*/
    align-items: center;
    border-radius: 20%;
}

.color:last-child{     /*color:last is correct but color:     last is incorrect*/
    background-color: lightpink;
}
.color:first-child{
    background-color:#9c6f44;
}
.size{
    height: 90px;
    width: 90px;
    margin-right:20px;
    align-items: center;
    border-radius: 20%;
    border: 2px solid black;
}

